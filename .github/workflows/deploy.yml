name: Deploy To S3 And Invalridate Cloudfront

on:
  push:
    branches:
      - main

# uses: actions/checkout@v4 깃허브의 라이브러리 gitghun marketplace에 저장되어있음
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4
      # # Repository에 잘 다운받아졌는지 확인 -눈으로 확인 하는 것 중요
      # uses 라이브러리 체크
      # - name: Repository 파일 출력하기
      #   run: ls

      # github에는 node.js를 깔지 않아도 이미 깔아져 있기때문에 인식함
      #  |를 써주면 명령어 여러개 쓸 수 있다
      # 의존성 설치 안하면 프로그램이 깔리지 않기 때문에 빌드가 되질 않음
      - name: 의존성 설치
        run: npm i

      - name: 빌드하기
        run: npm run build

      # - name: Debugging
      #   run: |
      #     ls
      #     echo "----------------------"
      #     cd dist
      #     ls

      - name: AWS Ressource에 접근할 수 있게 AWS 인증 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: S3 기존 파일 삭제 확인
        run: aws s3 rm --recursive s3://facebookprc-web-page

      - name: s3에 빌드된 파일 업로드하기
        run: aws s3 cp ./dist s3://facebookprc-web-page/ --recursive

        #업로드만 하면 cloudfront에 반영이 안됨 그래서 캐시 무효화 해줘야함
        # distribution-id 배포 아이디
      - name: CloudFront 캐시 무효화 하기
        run: aws cloudfront create-invalidation --distribution-id E3U1F2WQV09PM0 --paths "/*"
#기능 추가와 업데이트를 하더라도 aws에 알아서 자동으로 업데이트가 되게끔 세팅
#실제 프로젝트 진행시 - 매번 기능 업데이트 시 commit을 찍을 때마다 aws에 자동으로 웹페이지가 바뀌게끔 세팅
